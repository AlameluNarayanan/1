{
	"name": "PL_Project3_Abishek_To_MyDL_To_SQLDB",
	"properties": {
		"activities": [
			{
				"name": "CD_AB_MyDL",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFolderPath": {
								"value": "@pipeline().parameters.S_DIRECTORY",
								"type": "Expression"
							},
							"wildcardFileName": "*.csv",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_AB",
						"type": "DatasetReference",
						"parameters": {
							"S_CONTAINER": {
								"value": "@pipeline().parameters.S_CONTAINER",
								"type": "Expression"
							},
							"S_DIRECTORY": {
								"value": "@pipeline().parameters.S_DIRECTORY",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_DL",
						"type": "DatasetReference",
						"parameters": {
							"D_CONTAINER": {
								"value": "@pipeline().parameters.D_CONTAINER",
								"type": "Expression"
							},
							"D_DIRECTORY": {
								"value": "@pipeline().parameters.D_DIRECTORY",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Get_MetaData",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "CD_AB_MyDL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_GetData_MyDL",
						"type": "DatasetReference",
						"parameters": {
							"D_CONTAINER": {
								"value": "@pipeline().parameters.D_CONTAINER",
								"type": "Expression"
							},
							"D_DIRECTORY": {
								"value": "@pipeline().parameters.D_DIRECTORY",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get_MetaData",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get_MetaData').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_DL_1",
									"type": "DatasetReference",
									"parameters": {
										"D_CONTAINER": {
											"value": "@pipeline().parameters.D_CONTAINER",
											"type": "Expression"
										},
										"D_DIRECTORY": {
											"value": "@pipeline().parameters.D_DIRECTORY",
											"type": "Expression"
										},
										"D_FILENAME": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_AzureSQL",
									"type": "DatasetReference",
									"parameters": {
										"sqlschema": {
											"value": "@pipeline().parameters.sqlschema",
											"type": "Expression"
										},
										"sqltablename": "@split(item().name, '.')[0]"
									}
								}
							]
						},
						{
							"name": "Stored procedure1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[update_status]",
								"storedProcedureParameters": {
									"Filename": {
										"value": {
											"value": "@item().name",
											"type": "Expression"
										},
										"type": "String"
									},
									"Status": {
										"value": {
											"value": "@activity('Copy data1').Status",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Email Alert",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Pipeline-Email",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"Subject": "Pl-email-notification",
									"Message": {
										"value": "Pipeline failed starttime: @{pipeline().TriggerTime} Batch End Time: @{utcnow()}",
										"type": "Expression"
									},
									"PipelineName": "3rd Project from Alamelu"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"S_CONTAINER": {
				"type": "string",
				"defaultValue": "input"
			},
			"D_CONTAINER": {
				"type": "string",
				"defaultValue": "input"
			},
			"D_DIRECTORY": {
				"type": "string",
				"defaultValue": "filespractice"
			},
			"S_DIRECTORY": {
				"type": "string",
				"defaultValue": "filespractice"
			},
			"sqlschema": {
				"type": "string",
				"defaultValue": "test"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-05-24T07:07:57Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}